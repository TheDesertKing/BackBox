L cd %%DBL%%

L curl -k -i -X GET 'https://%%HOST%%/api/?type=keygen&user=%%USER%%&password=%%PASSWORD%%' \> tempkey tout60 

L sed -n 's/.*<key>\([^<]*\)<\/key>.*/\1/p' tempkey \> key 

L curl -k "https://%%HOST%%/api/?type=config&action=get&xpath=/config/devices/entry%5B%40name%3D%27localhost.localdomain%27%5D/vsys/entry%5B%40name%3D%27vsys1%27%5D/rulebase/decryption/rules&key=`cat key`" | tee response tout60

L xmlstarlet sel -t -c "//rules/entry[@name='%%DYN_DEC_RULE%%']" -n response V> %%RULE_EXISTS%%

L if (%%RULE_EXISTS%% isempty) echo "Decryption Rule %%DYN_DEC_RULE%% was not found"
* F:Decryption Rule %%DYN_DEC_RULE%% was not found

L xmlstarlet sel -t -v "//rules/entry[@name='%%DYN_DEC_RULE%%']/from/member" -n response V> %%SRC_ZONE%%

L xmlstarlet sel -t -v "//rules/entry[@name='%%DYN_DEC_RULE%%']/source/member" -n response V> %%SRC_IP%%

L if (%%SRC_ZONE%% equal any AND %%SRC_IP%% equal any) echo "Source Zone and IP are any, should be set specifically"
* F:Source Zone and IP are any, should be set specifically

L xmlstarlet sel -t -v "//rules/entry[@name='%%DYN_DEC_RULE%%']/to/member" -n response V> %%DST_ZONE%%

L if (%%DST_ZONE%% equal any) echo "Destination Zone is set to any, should be set specifically to external zone"
* F:Destination Zone is set to any, should be set specifically to external zone

L echo -e "abortion\nabused-drugs\nadult\nalcohol-and-tobacco\nartificial-intelligence\nauctions\nbusiness-and-economy\ncommand-and-control\ncomputer-and-internet-info\ncontent-delivery-networks\ncopyright-infringement\ncryptocurrency\ndating\ndynamic-dns\neducational-institutions\nencrypted-dns\nentertainment-and-arts\nextremism\nfinancial-services\ngambling\ngames\ngovernment\ngrayware\nhacking\nhealth-and-medicine\nhigh-risk\nhome-and-garden\nhunting-and-fishing\ninsufficient-content\ninternet-communications-and-telephony\ninternet-portals\njob-search\nlegal\nlow-risk\nmalware\nmedium-risk\nmilitary\nmotor-vehicles\nmusic\nnewly-registered-domain\nnews\nnot-resolved\nnudity\nonline-storage-and-backup\nparked\npeer-to-peer\npersonal-sites-and-blogs\nphilosophy-and-political-advocacy\nphishing\nprivate-ip-addresses\nproxy-avoidance-and-anonymizers\nquestionable\nransomware\nreal-estate\nreal-time-detection\nrecreation-and-hobbies\nreference-and-research\nreligion\nscanning-activity\nsearch-engines\nsex-education\nshareware-and-freeware\nshopping\nsocial-networking\nsociety\nsports\nstock-advice-and-tools\nstreaming-media\nswimsuits-and-intimate-apparel\ntraining-and-tools\ntranslation\ntravel\nunknown\nweapons\nweb-advertisements\nweb-based-email\nweb-hosting" \> default_categories

L xmlstarlet sel -t -v "//rules/entry[@name='%%DYN_DEC_RULE%%']/category/member" -n response > conf_categories

L cat conf_categories V> %%CONF_CATEGORIES%%

I if (%%CONF_CATEGORIES%% equal any) gotoline 20 1

L echo "%%DYN_EXCEPT_CATEGORIES%%" | tr "," "\n"; cat conf_categories > categories_to_test

L grep -xvFf categories_to_test default_categories > categories_not_set

L cat categories_not_set V> %%CATEGORIES_NOT_SET%%

L if (%%CATEGORIES_NOT_SET%% isnotempty) echo "URL Categories missing: %%CATEGORIES_NOT_SET%%"
* F:URL Categories missing: %%CATEGORIES_NOT_SET%%

L xmlstarlet sel -t -m "//rules/entry[@name='%%DYN_DEC_RULE%%']/type" -v "name(./*)" -n response V> %%PROXY_TYPE%%

L if (%%PROXY_TYPE%% notcontains ssl-forward-proxy) echo "Option Type is set to %%PROXY_TYPE%%, should be SSL Forward Proxy"
* F:Option Type is set to %%PROXY_TYPE%%, should be SSL Forward Proxy

L cd %%DBL%%; ls | grep -v logs | xargs rm -rf

L if (%%PROXY_TYPE%% contains ssl-forward-proxy) echo "Decryption Rule %%DYN_DEC_RULE%% is properly configured with SSL Forward Proxy Policy"
* S:Decryption Rule %%DYN_DEC_RULE%% is properly configured with SSL Forward Proxy Policy
