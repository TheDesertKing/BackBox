L cd %%DBL%%

L curl -k -i -X GET 'https://%%HOST%%/api/?type=keygen&user=%%USER%%&password=%%PASSWORD%%' \> tempkey tout60 
# request Token

L sed -n 's/.*<key>\([^<]*\)<\/key>.*/\1/p' tempkey \> key 
# Parse Token

L curl -k "https://%%HOST%%/api/?type=config&action=get&xpath=/config/devices/entry%5B%40name%3D%27localhost.localdomain%27%5D/network/profiles/interface-management-profile&key=`cat key`" | tee response tout60

L xmlstarlet sel -t -v "//interface-management-profile/entry[ssh[text()='yes']|snmp[text()='yes']|https[text()='yes']]/@name" -n response V> %%PROFILES_WITH_PROTOCOLS%% 
# parse protocols with SSH, SNMP and/or HTTPS set

L xmlstarlet sel -t -m "//interface-management-profile/entry[ssh[text()='yes']|snmp[text()='yes']|https[text()='yes']]" -i "not(permitted-ip)" -v "@name" -n response V> %%BAD_MGMT_PROFILES%% 
# parse profiles that have ssh,snmp and or https and return their names if they don't have permitted IP's

L cd %%DBL%%; ls | grep -v logs | tee /dev/tty | xargs rm -rf

L if (%%PROFILES_WITH_PROTOCOLS%% isempty) echo 'No Management Interface profiles with SSH, HTTPS and/or SNMP found' 
* F:No Management Interface profiles with SSH, HTTPS and/or SNMP found

L if (%%BAD_MGMT_PROFILES%% isnotempty) echo 'Permitted IP Addresses are not set for Management Interface profiles that allow SNMP, HTTPS and/or SSH: \n%%BAD_MGMT_PROFILES%%' 
* F:Permitted IP Addresses are not set for Management Interface profiles that allow SNMP, HTTPS and/or SSH: %%ENTER%%%%BAD_MGMT_PROFILES%%

L if (%%BAD_MGMT_PROFILES%% isempty) echo 'Permitted IP Addresses are set for all Management Interface profiles that allow SNMP, HTTPS and/or SSH' 
* S:Permitted IP Addresses are set for all Management Interface profiles that allow SNMP, HTTPS and/or SSH
