L cd %%DBL%%

L curl -k -i -X GET 'https://%%HOST%%/api/?type=keygen&user=%%USER%%&password=%%PASSWORD%%' > tempkey tout60

L sed -n 's/.*<key>\([^<]*\)<\/key>.*/\1/p' tempkey > key

L curl -k "https://%%HOST%%/api/?type=config&action=get&xpath=/config/devices/entry%5B%40name%3D%27localhost.localdomain%27%5D/vsys&key=`cat key`" | tee response tout60

L xmlstarlet sel -t -v "//result/vsys/entry/@name" -n response > vsys_list

L cat vsys_list | wc -l V> %%VSYS_COUNTER%%

L head -1 vsys_list; sed -i '1d' vsys_list V> %%VSYS_NAME%%

L xmlstarlet sel -t -c "//result/vsys/entry[@name='%%VSYS_NAME%%']//rulebase/security" -n response > vsys_conf

L xmlstarlet sel -t -v "//rules/entry/@name" -n vsys_conf > policies

L cat policies | sed '/^$/d' | wc -l V> %%COUNTER%%

I if (%%COUNTER%% equal 0) gotoline 25 100
# VSYS has no security profiles

L head -1 policies; sed -i '1d' policies V> %%POLICY%%

L xmlstarlet sel -t -v "//entry[@name='%%POLICY%%']/from/member" -n response V> %%SRC_ZONE%%

L xmlstarlet sel -t -v "//entry[@name='%%POLICY%%']/to/member" -n response V> %%DST_ZONE%%

L if (%%DYN_DIRECTION%% contains from) xmlstarlet sel -t -v "//entry[@name='%%POLICY%%']/source/member" -n response V> %%ADDRESS%%
# blocking FROM malicious IPs

L if (%%DYN_DIRECTION%% contains to) xmlstarlet sel -t -v "//entry[@name='%%POLICY%%']/destination/member" -n response V> %%ADDRESS%%
# blocking TO malicious IPs

L xmlstarlet sel -t -v "//entry[@name='%%POLICY%%']/application/member" -n response V> %%APPLICATION%%

L xmlstarlet sel -t -v "//entry[@name='%%POLICY%%']/service/member" -n response V> %%SERVICE%%

L xmlstarlet sel -t -v "//entry[@name='%%POLICY%%']/action" -n response V> %%ACTION%%

L xmlstarlet sel -t -c "//entry[@name='%%POLICY%%']/profile-setting" -n response V> %%PROFILE%%

L if (%%SRC_ZONE%% equal any AND %%DST_ZONE%% equal any AND %%ADDRESS%% equal panw-known-ip-list AND %%APPLICATION%% equal any AND %%SERVICE%% equal any AND %%ACTION%% equal deny AND %%PROFILE%% notcontains <) echo "VSYS %%VSYS_NAME%%: Policy %%POLICY%%" >> correct_profiles

L echo $((%%COUNTER%% - 1)) V> %%COUNTER%%

I if (%%COUNTER%% > 0) gotoline 12 200

L if ! grep -qs "%%VSYS_NAME%%" correct_profiles; then echo "VSYS %%VSYS_NAME%% has no Security Policies blocking traffic %%DYN_DIRECTION%% malicious IPs"; fi >> issues
# if vsys has no correct blocking profile

L echo $((%%VSYS_COUNTER%% - 1)) V> %%VSYS_COUNTER%%

I if (%%VSYS_COUNTER%% > 0) gotoline 7 100

L cat issues V> %%ISSUES%%

L cat correct_profiles V> %%CORRECT_PROFILES%%

L cd %%DBL%%; ls | grep -v logs | tee /dev/tty | xargs rm -rf
#Cleanup

L if (%%ISSUES%% notcontains such file AND %%CORRECT_PROFILES%% contains such file) echo -e "%%ISSUES%%\nFor information about how to configure the correct blocking Security Policy, please refer to the CIS manual"
* F:%%ISSUES%%%%ENTER%%For information about how to configure the correct blocking Security Policy, please refer to the CIS manual

L if (%%ISSUES%% isnotempty AND %%CORRECT_PROFILES%% notcontains such file) echo -e "%%ISSUES%%\nFound existing policies blocking traffic %%DYN_DIRECTION%% malicious IPs:\n%%CORRECT_PROFILES%%\nFor information about how to configure the correct blocking Security Policy, please refer to the manual CIS" 
* F:%%ISSUES%%%%ENTER%%Found existing policies blocking traffic %%DYN_DIRECTION%% malicious IPs:%%ENTER%%%%CORRECT_PROFILES%%%%ENTER%%For information about how to configure the correct blocking Security Policy, please refer to the CIS manual

L if (%%ISSUES%% isempty) echo -e "Found Security Policy blocking traffic %%DYN_DIRECTION%% malicious IPs on every VSYS:\n%%CORRECT_PROFILES%%" 
* S:Found Security Policy blocking traffic %%DYN_DIRECTION%% malicious IPs on every VSYS:%%ENTER%%%%CORRECT_PROFILES%%
