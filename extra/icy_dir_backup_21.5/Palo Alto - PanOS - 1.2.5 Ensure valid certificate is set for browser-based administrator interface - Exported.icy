L cd %%DBL%%

L curl -k -i -X GET 'https://%%HOST%%/api/?type=keygen&user=%%USER%%&password=%%PASSWORD%%' \> tempkey tout60 

L sed -n 's/.*<key>\([^<]*\)<\/key>.*/\1/p' tempkey \> key 

L curl -k "https://%%HOST%%/api/?type=config&action=get&xpath=/config/devices/entry%5B%40name%3D%27localhost.localdomain%27%5D/deviceconfig/system/ssl-tls-service-profile&key=`cat key`" | tee response tout60 

L xmlstarlet sel -t -v "//ssl-tls-service-profile" -n response V> %%CERT_PROF%% 
# %%CERT_PROF%%

L if (%%CERT_PROF%% isempty) echo "No SSL TLS Service Profile is set for browser-based administrator interface"
* F:No SSL TLS Service Profile is set for browser-based administrator interface

I url_encode %%CERT_PROF%% V> %%CERT_PROF%%

L curl -k "https://%%HOST%%/api/?type=config&action=get&xpath=/config/shared/ssl-tls-service-profile/entry%5B%40name%3D%27%%CERT_PROF%%%27%5D&key=`cat key`" | tee profile tout60
# profile

L xmlstarlet sel -t -v "//certificate" -n profile V> %%CERT_NAME%% 
# %%CERT_NAME%%

I url_encode %%CERT_NAME%% V> %%CERT_NAME%%

L curl -k "https://%%HOST%%/api/?type=config&action=get&xpath=/config/shared/certificate/entry%5B%40name%3D%27%%CERT_NAME%%%27%5D&key=`cat key`" | tee certificate tout60
# certificate

L date +'%Y%m%d' V> %%DATE%% 
# %%CURRENT_DATE%%

L xmlstarlet sel -t -v "//not-valid-after" -n certificate | awk '{print $2 $1 $4}' V> %%TO_DATE%% 
# %%TO_DATE%%

L xmlstarlet sel -t -v "//not-valid-before" -n certificate | awk '{print $2 $1 $4}' V> %%FROM_DATE%% 
# %%FROM_DATE%%

L date +'%Y%m%d' -d "%%FROM_DATE%%" V> %%FORMATTED_FROM_DATE%%
# %%FORMATTED_FROM_DATE%%

L date +'%Y%m%d' -d "%%TO_DATE%%" V> %%FORMATTED_TO_DATE%% 
# %%FORMATTED_TO_DATE%%

L if (%%FORMATTED_FROM_DATE%% > %%CURRENT_DATE%%) echo "'From' date is in the future, certificate is not yet valid: %%FORMATTED_FROM_DATE%%" >> issues

L if (%%FORMATTED_TO_DATE%% < %%CURRENT_DATE%%) echo "'To' date is in the past, certificate expired: %%FORMATTED_TO_DATE%%" >> issues

L xmlstarlet sel -t -v "//issuer" -n certificate | awk -F'O[[:space:]]*=[[:space:]]*' '{print $2}' | cut -d',' -f1 V> %%ISSUER_NAME%% 
# %%ISSUER_NAME%%

L if (%%ISSUER_NAME%% notcontains %%DYN_ISSUER%% AND %%DYN_ISSUER%% isnotempty) echo "Issuer name doesn't contain '%%DYN_ISSUER%%', as specified by dynamic field. Issuer name: '%%ISSUER_NAME%%'" >> issues

L xmlstarlet sel -t -v "//algorithm" -n certificate V> %%ENCRYPTION_CIPHER%% 
# %%ENCRYPTION_CIPHER%%

L if (%%ENCRYPTION_CIPHER%% notcontains %%DYN_ENCRYPTION%% AND %%DYN_ENCRYPTION%% isnotempty) echo "Encryption cipher used does not contain '%%DYN_ENCRYPTION%%', as specified by dynamic field. Ecryption cipher used: '%%ENCRYPTION_CIPHER%%'" >> issues

L xmlstarlet sel -t -v "//public-key" -n certificate |  openssl x509 -text 2>/dev/null | grep "Signature Algorithm" | awk 'END {print $NF}' V> %%ALGORITHM%%
# gather the signature's algorithm

L if (%%DYN_ALGORITHM%% isnotempty) echo '%%DYN_ALGORITHM%%' | tr '[:upper:]' '[:lower:]' V> %%DYN_ALGORITHM%%
# algorithm gathered will always be lower case

L if (%%ALGORITHM%% notcontains %%DYN_ALGORITHM%% AND %%DYN_ALGORITHM%% isnotempty) echo "Algorithm used does not contain '%%DYN_ALGORITHM%%', as specified by dynamic field. Algorithm used: '%%ALGORITHM%%'" >> issues

L cat issues V> %%ISSUES%%

L cd %%DBL%%; ls | grep -v logs | tee /dev/tty | xargs rm -rf

L if (%%ISSUES%% notcontains such file) echo "Issues found with the certificate used for browser-based administrator interface:\n%%ISSUES%%"
* F:Issues found with the certificate used for browser-based administrator interface:%%ENTER%%%%ISSUES%%

L if (%%ISSUES%% contains such file) echo "A valid certificate is set for browser-based administrator interface:\nFrom date: %%FORMATTED_FROM_DATE%%\nTo date: %%FORMATTED_TO_DATE%%\nIssuer organization: %%ISSUER_NAME%%\nEcryption cipher: %%ENCRYPTION_CIPHER%%\nAlgorithm: %%ALGORITHM%%"
* S:A valid certificate is set for browser-based administrator interface:%%ENTER%%From date: %%FORMATTED_FROM_DATE%%%%ENTER%%To date:%%FORMATTED_TO_DATE%%%%ENTER%%Issuer organization: %%ISSUER_NAME%%%%ENTER%%Ecryption cipher: %%ENCRYPTION_CIPHER%%%%ENTER%%Algorithm: %%ALGORITHM%%
