L cd %%DBL%%

L curl -k -i -X GET 'https://%%HOST%%/api/?type=keygen&user=%%USER%%&password=%%PASSWORD%%' \> tempkey tout60

L sed -n 's/.*<key>\([^<]*\)<\/key>.*/\1/p' tempkey \> key

L curl -k "https://%%HOST%%/api/?type=config&action=get&xpath=/config/shared/log-settings&key=`cat key`" | tee response tout60

L xmlstarlet sel -t -m "//snmptrap/entry[.//v3]" -v "@name" -n response | sed '/^$/d' > v3profiles 

L cat v3profiles | sed '/^$/d' | wc -l V> %%COUNTER%% 

L head -1 v3profiles; sed -i '1d' v3profiles V> %%SNMPPROF%% 

L xmlstarlet sel -t -v "//snmptrap/entry[@name='%%SNMPPROF%%']/version/v3/server/entry/user" -n response V> %%USER%% 

L xmlstarlet sel -t -v "//snmptrap/entry[@name='%%SNMPPROF%%']/version/v3/server/entry/authpwd " -n response V> %%AUTHPWD%% 

L xmlstarlet sel -t -v "//snmptrap/entry[@name='%%SNMPPROF%%']/version/v3/server/entry/privpwd" -n response V> %%PRIVPWD%% 

L echo $((%%COUNTER%%-1)) V> %%COUNTER%%

L if (%%USER%% isnotempty AND %%AUTHPWD%% isnotempty AND %%PRIVPWD%% isnotempty) echo "%%SNMPPROF%%" >> valid_profiles
# If SNMP Profile is valid

I if (%%COUNTER%% greater 0) gotoline 7 100

L cat valid_profiles | sed '/^$/d' V> %%VALID_PROFILES%%

L if (%%VALID_PROFILES%% isempty) echo "No SNMP profile found configured as V3 and fields User,Auth Password and Priv Password filled. There should be at least one."
* F:No SNMP profile found configured as V3 and fields User,Auth Password and Priv Password filled. There should be at least one.

L cat valid_profiles | sed '/^$/d' | wc -l V> %%P_COUNTER%%

L head -1 valid_profiles; sed -i '1d' valid_profiles V> %%VALID_SNMPPROF%% 

L xmlstarlet sel -t -m "//system/match-list/entry[send-snmptrap/member='%%VALID_SNMPPROF%%' and filter='All Logs']" -v "@name" -n response >> system 

L xmlstarlet sel -t -m "//config/match-list/entry[send-snmptrap/member='%%VALID_SNMPPROF%%' and filter='All Logs']" -v "@name" -n response >> config 

L xmlstarlet sel -t -m "//userid/match-list/entry[send-snmptrap/member='%%VALID_SNMPPROF%%' and filter='All Logs']" -v "@name" -n response >> userid 

L xmlstarlet sel -t -m "//hipmatch/match-list/entry[send-snmptrap/member='%%VALID_SNMPPROF%%' and filter='All Logs']" -v "@name" -n response >> hip 

L xmlstarlet sel -t -m "//iptag/match-list/entry[send-snmptrap/member='%%VALID_SNMPPROF%%' and filter='All Logs']" -v "@name" -n response >> iptag 

L echo $((%%P_COUNTER%%-1)) V> %%P_COUNTER%%

I if (%%P_COUNTER%% greater 0) gotoline 17 100

L if ! grep -q '[^[:space:]]' system; then echo "System"; fi >> categoeies_missing_profile
#Check if empty then write 'System'

L if ! grep -q '[^[:space:]]' config; then echo "Configuration"; fi >> categories_missing_profile

L if ! grep -q '[^[:space:]]' userid; then echo "User-ID"; fi >> categories_missing_profile

L if ! grep -q '[^[:space:]]' hip; then echo "HIP Match"; fi >> categories_missing_profile

L if ! grep -q '[^[:space:]]' iptag; then echo "IP-Tag"; fi >> categories_missing_profile

L cat categories_missing_profile V> %%CATEGORIES_MISSING_PROFILES%%

L cd %%DBL%%; ls | grep -v logs | tee /dev/tty | xargs rm -rf
# Cleanup

L if (%%CATEGORIES_MISSING_PROFILES%% isnotempty) echo "No SNMP v3 Logging Profile entry with 'All Logs' set for sections: %%CATEGORIES_MISSING_PROFILES%%"
* F:No SNMP v3 Logging Profile entry with 'All Logs' set for sections: %%CATEGORIES_MISSING_PROFILES%%

L if (%%CATEGORIES_MISSING_PROFILES%% isempty) echo "SNMP v3 Logging Profile with entry 'All Logs' is set for all sections: System, Configuration, User-ID, HIP Match and IP-TAG"
* S:SNMP v3 Logging Profile with entry 'All Logs' is set for all sections: System, Configuration, User-ID, HIP Match and IP-TAG
