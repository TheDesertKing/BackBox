L cd %%DBL%% tout60

L curl -k -i -X GET 'https://%%HOST%%/api/?type=keygen&user=%%USER%%&password=%%PASSWORD%%' > tempkey tout60

L sed -n 's/.*<key>\([^<]*\)<\/key>.*/\1/p' tempkey > key tout60

L curl -k "https://%%HOST%%/api/?type=config&action=get&xpath=/config/devices/entry%5B%40name%3D%27localhost.localdomain%27%5D/vsys/entry%5B%40name%3D%27vsys1%27%5D/rulebase/security/rules&key=`cat key`" | tee response tout60

L xmlstarlet sel -t -v "//entry[@name='%%DYN_SEC_POLICY%%']" -n response V> %%POLICY%%

L if (%%POLICY%% isempty) echo "Security Policy %%DYN_SEC_POLICY%% not found"
* F:Security Policy %%DYN_SEC_POLICY%% not found

L xmlstarlet sel -t -v "//entry[@name='%%DYN_SEC_POLICY%%']/application/member" -n response V> %%APPLICATION%%

L if (%%APPLICATION%% equal any) echo "Application is set to any, should be properly set depending on the traffic type"
* F:Application is set to any, should be properly set depending on the traffic type

L xmlstarlet sel -t -v "//entry[@name='%%DYN_SEC_POLICY%%']/service/member" -n response V> %%SERVICE%%

L if (%%SERVICE%% equal any) echo "Service is set to any, should be set to application-specific, or properly set depending on the traffic type"
* F:Service is set to any, should be set to application-specific, or properly set depending on the traffic type

L cd %%DBL%%; ls | grep -v logs | tee /dev/tty | xargs rm -rf

L if (%%APPLICATION%% notequal any AND %%SERVICE notequal application-default) echo CIS 7.1 Application security policies exist when allowing traffic from an untrusted zone to a more trusted zone : PASS tout60 
* S:CIS 7.1 Application security policies exist when allowing traffic from an untrusted zone to a more trusted zone : PASS
